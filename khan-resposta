// Vers√£o da aplica√ß√£o
const APP = {
  ver: "1.2.0",
  user: {
    id: 0
  },
  cfg: {
    mod: true,
    auto: false,
    questionSpoof: true,
    darkMode: true,
    autoSpeed: 750,
    speedOptions: [750, 1000, 1250, 1500]
  }
};

// Fun√ß√£o para carregar scripts externos
async function loadScript(url) {
  const response = await fetch(url);
  const script = await response.text();
  eval(script);
}

// Fun√ß√£o para carregar CSS externo
async function loadCss(url) {
  return new Promise(resolve => {
    const link = document.createElement("link");
    link.rel = "stylesheet";
    link.type = "text/css";
    link.href = url;
    link.onload = resolve;
    document.head.appendChild(link);
  });
}

// Notifica√ß√µes com Toastify
function sendToast(message, duration = 5000, position = "bottom") {
  if (typeof Toastify !== 'undefined') {
    Toastify({
      text: message,
      duration,
      gravity: position,
      position: "center",
      stopOnFocus: true,
      style: { background: "#000000" }
    }).showToast();
  } else {
    console.log("Toast:", message);
  }
}

// Fun√ß√£o para tocar som
const playAudio = src => {
  new Audio(src).play();
};

class UI {
  static init() {
    const panel = document.createElement("div");
    panel.id = "ScriptbotJunin-panel";
    Object.assign(panel.style, {
      position: "fixed",
      top: "10px",
      right: "15px",
      width: "200px",
      background: "linear-gradient(145deg, #1a1a1a, #111)",
      borderRadius: "12px",
      display: "flex",
      flexDirection: "column",
      padding: "12px",
      zIndex: "9999",
      boxShadow: "0 4px 15px rgba(0,0,0,0.3)",
      border: "1px solid #333",
      maxWidth: "90%"
    });

    panel.innerHTML = `
      <style>
        .ScriptbotJunin-header {
          color: #fff;
          font-size: 18px;
          font-weight: bold;
          text-align: center;
          margin-bottom: 10px;
          padding-bottom: 10px;
          border-bottom: 1px solid #333;
          cursor: pointer;
          user-select: none;
          display: flex;
          justify-content: center;
          align-items: center;
        }
        .ScriptbotJunin-header:after {
          content: "‚ñº";
          font-size: 12px;
          margin-left: 5px;
          transition: transform 0.3s ease;
        }
        .ScriptbotJunin-header.collapsed:after {
          transform: rotate(-90deg);
        }
        .ScriptbotJunin-content {
          transition: max-height 0.3s ease, opacity 0.3s ease;
          max-height: 500px;
          opacity: 1;
          overflow: hidden;
        }
        .ScriptbotJunin-content.collapsed {
          max-height: 0;
          opacity: 0;
        }
        .ScriptbotJunin-version {
          color: #666;
          font-size: 12px;
          font-weight: normal;
        }
        .ScriptbotJunin-opt {
          display: flex;
          align-items: center;
          justify-content: space-between;
          color: #fff;
          padding: 8px;
          margin: 3px 0;
        }
        .switch {
          position: relative;
          display: inline-block;
          width: 44px;
          height: 22px;
        }
        .switch input {
          opacity: 0;
          width: 0;
          height: 0;
        }
        .slider {
          position: absolute;
          cursor: pointer;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          background-color: #333;
          transition: .4s;
          border-radius: 22px;
        }
        .slider:before {
          position: absolute;
          content: "";
          height: 18px;
          width: 18px;
          left: 2px;
          bottom: 2px;
          background-color: white;
          transition: .4s;
          border-radius: 50%;
        }
        input:checked + .slider {
          background: linear-gradient(145deg, #6200ea, #7c4dff);
        }
        input:checked + .slider:before {
          transform: translateX(22px);
        }
        .ScriptbotJunin-credit {
          color: #666;
          font-size: 11px;
          text-align: center;
          margin-top: 10px;
          padding-top: 10px;
          border-top: 1px solid #333;
        }
        .speed-slider-container {
          width: 100%;
          margin-top: 5px;
          padding: 0 2px;
          box-sizing: border-box;
        }
        .speed-slider {
          -webkit-appearance: none;
          width: 100%;
          height: 8px;
          border-radius: 5px;
          background: #333;
          outline: none;
          margin: 10px 0;
        }
        .speed-slider::-webkit-slider-thumb {
          -webkit-appearance: none;
          appearance: none;
          width: 18px;
          height: 18px;
          border-radius: 50%;
          background: linear-gradient(145deg, #6200ea, #7c4dff);
          cursor: pointer;
        }
        .speed-slider::-moz-range-thumb {
          width: 18px;
          height: 18px;
          border-radius: 50%;
          background: linear-gradient(145deg, #6200ea, #7c4dff);
          cursor: pointer;
          border: none;
        }
        .speed-value, .speed-ticks, .speed-tick {
          display: none;
        }
      </style>
      <div class="ScriptbotJunin-header">
        ScriptbotJunin <span class="ScriptbotJunin-version">${APP.ver}</span>
      </div>
      <div class="ScriptbotJunin-content">
        <div class="ScriptbotJunin-opt">
          <span>Auto Complete</span>
          <label class="switch">
            <input type="checkbox" id="autoCheck">
            <span class="slider"></span>
          </label>
        </div>
        <div class="ScriptbotJunin-opt">
          <span>Question Spoof</span>
          <label class="switch">
            <input type="checkbox" id="spoofCheck" checked>
            <span class="slider"></span>
          </label>
        </div>
        <div class="ScriptbotJunin-opt">
          <span>Dark Mode</span>
          <label class="switch">
            <input type="checkbox" id="darkModeCheck" checked>
            <span class="slider"></span>
          </label>
        </div>
        <div class="ScriptbotJunin-opt" id="speedControlContainer" style="display: none;">
          <span>Velocidade</span>
          <div style="width: 100%; display: flex; align-items: center; padding-left: 10px; box-sizing: border-box;">
            <div class="speed-slider-container">
              <input type="range" min="0" max="3" value="0" class="speed-slider" id="speedSlider">
              <div class="speed-value" id="speedValue">750ms</div>
            </div>
          </div>
        </div>
        <div class="ScriptbotJunin-credit">by AdrielDev</div>
      </div>
    `;
    document.body.appendChild(panel);

    // Colapsar e restaurar
    const header = document.querySelector('.ScriptbotJunin-header');
    const content = document.querySelector('.ScriptbotJunin-content');

    header.addEventListener('click', () => {
      header.classList.toggle('collapsed');
      content.classList.toggle('collapsed');
      const isCollapsed = header.classList.contains('collapsed');
      localStorage.setItem('ScriptbotJunin-collapsed', isCollapsed);
      sendToast(isCollapsed ? "üîº Menu recolhido" : "üîΩ Menu expandido", 1000);
    });

    if (localStorage.getItem('ScriptbotJunin-collapsed') === 'true') {
      header.classList.add('collapsed');
      content.classList.add('collapsed');
    }

    // Event Listeners
    document.getElementById("autoCheck").onchange = event => {
      APP.cfg.auto = event.target.checked;
      document.getElementById("speedControlContainer").style.display = APP.cfg.auto ? "flex" : "none";
      sendToast(APP.cfg.auto ? "‚úÖ Auto Complete Enabled" : "‚ùå Auto Complete Disabled", 2000);
    };

    const speedSlider = document.getElementById("speedSlider");
    const speedValue = document.getElementById("speedValue");
    const initialIndex = APP.cfg.speedOptions.indexOf(APP.cfg.autoSpeed);
    speedSlider.value = initialIndex >= 0 ? initialIndex : 0;

    speedSlider.oninput = () => {
      const index = parseInt(speedSlider.value);
      const speed = APP.cfg.speedOptions[index];
      APP.cfg.autoSpeed = speed;
      speedValue.textContent = speed + "ms";
    };

    speedSlider.onchange = () => {
      const index = parseInt(speedSlider.value);
      const speed = APP.cfg.speedOptions[index];
      sendToast(`‚è±Ô∏è Velocidade alterada para ${speed}ms`, 2000);
    };

    document.getElementById("spoofCheck").onchange = event => {
      APP.cfg.questionSpoof = event.target.checked;
      sendToast(APP.cfg.questionSpoof ? "‚úÖ Question Spoof Enabled" : "‚ùå Question Spoof Disabled", 2000);
    };

    document.getElementById("darkModeCheck").onchange = event => {
      APP.cfg.darkMode = event.target.checked;
      if (typeof DarkReader !== 'undefined') {
        if (APP.cfg.darkMode) {
          DarkReader.enable();
          sendToast("üåë Dark Mode Enabled", 2000);
        } else {
          DarkReader.disable();
          sendToast("‚òÄÔ∏è Dark Mode Disabled", 2000);
        }
      } else {
        console.error("DarkReader n√£o est√° dispon√≠vel");
        sendToast("‚ö†Ô∏è Dark Mode n√£o dispon√≠vel. Recarregue a p√°gina.", 3000);
      }
    };

    if (APP.cfg.darkMode && typeof DarkReader !== 'undefined') {
      DarkReader.enable();
    }
  }
}
