const APP = {
  ver: "1.3",
  user: {
    id: 0
  },
  cfg: {
    mod: true,
    auto: false,
    questionSpoof: true,
    darkMode: true,
    autoSpeed: 750,
    speedOptions: [750, 1000, 1250, 1500]
  }
};

// Função para carregar scripts e CSS externos
async function loadResource(url, type = 'script') {
  const response = await fetch(url);
  const content = await response.text();
  if (type === 'script') eval(content);
  else if (type === 'css') {
    const link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = url;
    document.head.appendChild(link);
  }
}

// Notificação com Toastify
function sendToast(message, duration = 5000) {
  if (typeof Toastify !== 'undefined') {
    Toastify({
      text: message,
      duration,
      gravity: 'bottom',
      position: 'center',
      stopOnFocus: true,
      style: { background: '#6200ea' }
    }).showToast();
  }
}

// Função para áudio
const playAudio = src => new Audio(src).play();

// Estilo visual do painel flutuante
const uiStyles = `
  #ScriptbotJunin-panel {
    position: fixed;
    top: 20px;
    right: 20px;
    width: 250px;
    background: linear-gradient(145deg, #3a3a3a, #1a1a1a);
    border-radius: 12px;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
    z-index: 9999;
    color: #fff;
    font-family: Arial, sans-serif;
    overflow: hidden;
    transition: all 0.3s ease-in-out;
  }
  #ScriptbotJunin-header {
    padding: 15px;
    font-size: 18px;
    text-align: center;
    font-weight: bold;
    cursor: pointer;
    background: linear-gradient(145deg, #6200ea, #7c4dff);
    border-bottom: 2px solid #444;
    user-select: none;
  }
  #ScriptbotJunin-header.collapsed {
    background: linear-gradient(145deg, #7c4dff, #6200ea);
  }
  .ScriptbotJunin-content {
    display: flex;
    flex-direction: column;
    padding: 12px;
    opacity: 1;
    transition: opacity 0.3s ease;
  }
  .ScriptbotJunin-content.collapsed {
    opacity: 0;
    display: none;
  }
  .switch {
    position: relative;
    display: inline-block;
    width: 34px;
    height: 20px;
  }
  .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }
  .switch .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: 0.4s;
    border-radius: 50px;
  }
  .switch .slider:before {
    position: absolute;
    content: "";
    height: 14px;
    width: 14px;
    border-radius: 50%;
    background-color: white;
    transition: 0.4s;
    left: 3px;
    bottom: 3px;
  }
  input:checked + .slider {
    background-color: #6200ea;
  }
  input:checked + .slider:before {
    transform: translateX(14px);
  }
  .speed-slider {
    width: 100%;
    height: 8px;
    border-radius: 5px;
    background: #444;
    appearance: none;
    outline: none;
    margin-top: 10px;
  }
  .speed-slider::-webkit-slider-thumb {
    appearance: none;
    width: 18px;
    height: 18px;
    background: #6200ea;
    border-radius: 50%;
    cursor: pointer;
  }
  .speed-value {
    margin-top: 5px;
    text-align: center;
  }
  .ScriptbotJunin-credit {
    font-size: 12px;
    color: #aaa;
    text-align: center;
    padding: 10px;
    border-top: 1px solid #333;
  }
`;

// Inicializa o painel
class UI {
  static init() {
    const panel = document.createElement('div');
    panel.id = 'ScriptbotJunin-panel';
    panel.innerHTML = `
      <div id="ScriptbotJunin-header">
        ScriptbotJunin v${APP.ver}
      </div>
      <div class="ScriptbotJunin-content">
        <div class="ScriptbotJunin-opt">
          <span>Auto Complete</span>
          <label class="switch">
            <input type="checkbox" id="autoCheck">
            <span class="slider"></span>
          </label>
        </div>
        <div class="ScriptbotJunin-opt">
          <span>Question Spoof</span>
          <label class="switch">
            <input type="checkbox" id="spoofCheck" checked>
            <span class="slider"></span>
          </label>
        </div>
        <div class="ScriptbotJunin-opt">
          <span>Dark Mode</span>
          <label class="switch">
            <input type="checkbox" id="darkModeCheck" checked>
            <span class="slider"></span>
          </label>
        </div>
        <div class="ScriptbotJunin-opt" id="speedControlContainer" style="display: none;">
          <span>Velocidade</span>
          <input type="range" min="0" max="3" value="0" class="speed-slider" id="speedSlider">
          <div class="speed-value" id="speedValue">750ms</div>
        </div>
        <div class="ScriptbotJunin-credit">by AdrielDev</div>
      </div>
    `;
    document.body.appendChild(panel);

    // Colapsar o painel
    const header = document.getElementById('ScriptbotJunin-header');
    const content = document.querySelector('.ScriptbotJunin-content');
    header.addEventListener('click', () => {
      header.classList.toggle('collapsed');
      content.classList.toggle('collapsed');
      const isCollapsed = header.classList.contains('collapsed');
      localStorage.setItem('ScriptbotJunin-collapsed', isCollapsed);
      sendToast(isCollapsed ? '🔼 Menu recolhido' : '🔽 Menu expandido', 1000);
    });

    if (localStorage.getItem('ScriptbotJunin-collapsed') === 'true') {
      header.classList.add('collapsed');
      content.classList.add('collapsed');
    }

    // Alterar configurações com base no estado dos controles
    document.getElementById('autoCheck').onchange = (event) => {
      APP.cfg.auto = event.target.checked;
      document.getElementById('speedControlContainer').style.display = APP.cfg.auto ? 'block' : 'none';
      sendToast(APP.cfg.auto ? '✅ Auto Complete Ativado' : '❌ Auto Complete Desativado', 2000);
    };

    document.getElementById('spoofCheck').onchange = (event) => {
      APP.cfg.questionSpoof = event.target.checked;
      sendToast(APP.cfg.questionSpoof ? '✅ Question Spoof Ativado' : '❌ Question Spoof Desativado', 2000);
    };

    document.getElementById('darkModeCheck').onchange = (event) => {
      APP.cfg.darkMode = event.target.checked;
      if (typeof DarkReader !== 'undefined') {
        DarkReader.toggle();
        sendToast(APP.cfg.darkMode ? '🌑 Dark Mode Ativado' : '☀️ Dark Mode Desativado', 2000);
      }
    };

    const speedSlider = document.getElementById('speedSlider');
    const speedValue = document.getElementById('speedValue');
    const initialIndex = APP.cfg.speedOptions.indexOf(APP.cfg.autoSpeed);
    speedSlider.value = initialIndex >= 0 ? initialIndex : 0;

    speedSlider.oninput = () => {
      const index = parseInt(speedSlider.value);
      const speed = APP.cfg.speedOptions[index];
      APP.cfg.autoSpeed = speed;
      speedValue.textContent = `${speed}ms`;
    };
  }
}

// Carregar o estilo
const styleTag = document.createElement('style');
styleTag.innerHTML = uiStyles;
document.head.appendChild(styleTag);

// Inicializar UI
UI.init();
